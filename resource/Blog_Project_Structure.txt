프레젠테이션 계층 : controller
비즈니스 계층 : service
퍼시스턴스 계층 : repository
데이터베이스와 연결되는 DAO : domain

엔터티 구성
id | BIGINT | N | 기본키 | 일련번호, 기본키
title | VARCHAR(255) | N |  | 게시물의 제목
content | VARCHAR(255) | N |  | 내용

블로그 생성 API 테스트 구조
1. given
- 블로그 글 추가에 필요한 요청 객체 생성

2. when
- 블로그 글 추가 API에 요청 전송
- 요청 타입은 JSON
- given 절에서 미리 만들어둔 객체를 요청 본문으로 함께 전송

3. then
- 응답 코드가 201 Created인 지 확인
- Blog를 전체 조회해 크기가 1인 지 확인
- 실제로 저장된 데이터와 요청 값 비교

블로그 글 목록 조회 API 테스트 구조
1. given
- 블로그 글 저장

2. when
- 목록 조회 API 호출

3. then
- 응답 코드가 200 OK
- 반환 받은 값 중에 0번째 요소의 content와 title이 저장된 값과 같은 지 확인

블로그 글 조회 API 테스트 구조
1. given
- 블로그 글 저장

2. when
- 저장한 블로그 글의 id 값으로 API 호출

3. then
- 응답 코드가 200 OK
- 반환 받은 content와 title이 저장된 값이 같은 지 확인

블로그 글 삭제 API 테스트 구조
1. given
- 블로그 글 저장

2. when
- 저장한 블로그 글의 id 값으로 삭제 API 호출

3. then
- 응답 코드가 200 OK
- 블로그 글 리스트를 전체 조회에 조회한 배열 크기가 0인 지 확인

블로그 글 수정 API 테스트 구조
1. given
- 블로그 글 저장
- 블로그 글 수정에 필요한 요청 객체 생성

2. when
- UPDATE API로 수정 요청 전송
- 요청 타입은 JSON
- given 절에서 미리 만들어둔 객체를 요청 본문으로 함께 전송

3. then
- 응답 코드가 200 OK인 지 확인
- 블로그 글 id로 조회한 후에 값이 수정되었는 지 확인










